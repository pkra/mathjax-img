(()=>{"use strict";const t=MathJax._.input.tex.Configuration,e=t.Configuration,a=(t.ConfigurationHandler,t.ParserConfiguration,MathJax._.input.tex.TokenMap),n=(a.parseResult,a.AbstractTokenMap,a.RegExpMap,a.AbstractParseMap,a.CharacterMap,a.DelimiterMap,a.MacroMap,a.CommandMap),i=(a.EnvironmentMap,MathJax._.input.tex.TexError.default);let r={};const o=function(t){if(""===t)return"";if(t.match(/^\s*([-+]?(\.\d+|\d+(\.\d*)?))\s*(pt|em|ex|mu|px|mm|cm|in|pc)\s*$/))return t.replace(/ /g,"");throw new i("BadImageDimen","Bad dimension for image: %1",t)};r.Img=function(t,e){const a=t.GetBrackets(e,""),n={src:"",alt:"",valign:"",width:"",height:""};if(a.match(/[,=]/))for(const t of a.split(/\s*,\s*/)){const[a,...r]=t.split(/\s*=\s*/);if(!n.hasOwnProperty(a))throw new i("UnknownKey",'Unknown parameter "%1" in %2',a,e);n[a]=o(r.join("="))}else n.valign=o(a),n.width=o(t.GetBrackets(e,"")),n.height=o(t.GetBrackets(e,""));n.alt=t.GetBrackets(e,""),n.src=t.GetArgument(e),n.valign||delete n.valign,n.width||delete n.width,n.height||delete n.height,n.alt||delete n.alt,t.Push(t.create("token","mglyph",n))},new n("img",{img:"Img"},r);e.create("img",{handler:{macro:["img"]}})})();